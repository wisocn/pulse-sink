

buildscript {
    ext {
        slf4jVersion                = "2.0.16"
        apacheCommonsLang3Version   = "3.17.0"
    }
}

plugins {
    id("com.github.johnrengelman.shadow")       version "8.1.1"
    id("io.micronaut.application")              version "4.4.4"
    id("io.micronaut.aot")                      version "4.4.4"
    id("com.gorylenko.gradle-git-properties")   version "2.4.2"
}

version = "0.1"
group = "com.paymentology"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor  "io.micronaut:micronaut-http-validation"
    annotationProcessor  "io.micronaut.serde:micronaut-serde-processor"

    // implementation
    implementation "io.micrometer:context-propagation"
    implementation "io.micronaut.reactor:micronaut-reactor"
    implementation "io.micronaut.serde:micronaut-serde-jackson"
    implementation "io.micronaut.micrometer:micronaut-micrometer-core"
    implementation "io.micronaut.micrometer:micronaut-micrometer-registry-statsd"
    implementation "io.micronaut:micronaut-management"


    implementation("org.slf4j:slf4j-api:${slf4jVersion}")
    implementation("org.apache.commons:commons-lang3:${apacheCommonsLang3Version}")


    // compile
    compileOnly("io.micronaut:micronaut-http-client")

    // runtime
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.yaml:snakeyaml")

    // test
    testImplementation("io.micronaut:micronaut-http-client")
}


application {
    mainClass = "com.paymentology.Application"
}
java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}


graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.paymentology.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
    }
}

application {
    mainClass.set("com.paymentology.Application")
}

tasks.named("dockerfileNative") {
    jdkVersion = "21"
}


